name: Continuous Deployment

on:
  push:
    branches: [ main, master ]

jobs:
  deploy:
    runs-on: ubuntu-latest
    
    steps:
    - name: Checkout repository
      uses: actions/checkout@v3

    - name: Setup SSH
      uses: webfactory/ssh-agent@v0.7.0
      with:
        ssh-private-key: ${{ secrets.EC2_SSH_KEY }}

    - name: Deploy to EC2
      run: |
        ssh -o StrictHostKeyChecking=no ubuntu@${{ secrets.EC2_HOST }} << 'ENDSSH'
          set -e
          
          cd /var/www
          
          # Clone repo jika belum ada
          if [ ! -d forum-api/.git ]; then
            echo "Cloning repository..."
            git clone https://github.com/soul222/forum-api.git forum-api
          fi
          
          cd /var/www/forum-api
          
          # Pull latest code
          echo "Pulling latest code..."
          git pull origin main
          
          # Create .env file
          echo "Creating .env file..."
          cat > .env << EOL
        HOST=0.0.0.0
        PORT=5000
        PGHOST=${{ secrets.PGHOST }}
        PGUSER=${{ secrets.PGUSER }}
        PGDATABASE=${{ secrets.PGDATABASE }}
        PGPASSWORD=${{ secrets.PGPASSWORD }}
        PGPORT=5432
        PGHOST_TEST=${{ secrets.PGHOST }}
        PGUSER_TEST=${{ secrets.PGUSER }}
        PGDATABASE_TEST=forumapi_test
        PGPASSWORD_TEST=${{ secrets.PGPASSWORD }}
        PGPORT_TEST=5432
        ACCESS_TOKEN_KEY=${{ secrets.ACCESS_TOKEN_KEY }}
        REFRESH_TOKEN_KEY=${{ secrets.REFRESH_TOKEN_KEY }}
        ACCESS_TOKEN_AGE=3600
        EOL
          
          # Make scripts executable
          chmod +x scripts/*.sh
          
          # Run deployment
          ./scripts/deploy.sh

          ./scripts/setup-ssl.sh
        ENDSSH

    - name: Verify deployment
      run: |
        sleep 10
        curl -f http://${{ secrets.EC2_HOST }}:5000 || curl -f https://${{ secrets.DOMAIN_NAME }} || echo "Health check warning"